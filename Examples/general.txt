/*
  ESP32 UART2 Raw Command Test for iSYS Radar
  -------------------------------------------
  - Sends a fixed 11-byte command frame to the radar via UART2 (pins RX=16, TX=17).
  - Prints the transmitted bytes (TX) and received response (RX) in HEX format.
  - Useful for debugging raw protocol without higher-level libraries.
*/

#include <Arduino.h>

// Use UART2 (pins 16 = RX, 17 = TX on ESP32)
HardwareSerial RadarSerial(2);

// Example command to send (11 bytes)
//uint8_t cmd[] = {0x68, 0x07, 0x07, 0x68, 0x80, 0x01, 0xD3, 0x00, 0x0B, 0xFE,0xDA,0x37,0x16};

uint8_t cmd[] = {0x68, 0x05, 0x05, 0x68, 0x80, 0x01, 0xD2, 0x00, 0x0B, 0x5E, 0x16};

void setup() {
  Serial.begin(115200);
  RadarSerial.begin(115200, SERIAL_8N1, 16, 17); // baud, config, RX, TX
  Serial.println("Starting raw UART command test...");
}

void loop() {
  // --- Send Command ---
  Serial.print("TX: ");
  for (size_t i = 0; i < sizeof(cmd); i++) {
    if (cmd[i] < 0x10) Serial.print("0");
    Serial.print(cmd[i], HEX);
    Serial.print(" ");
  }
  Serial.println();

  RadarSerial.write(cmd, sizeof(cmd));

  RadarSerial.flush(); // ensure bytes are sent

  // --- Receive Response ---
  if (RadarSerial.available()) {
    Serial.print("RX: ");
    while (RadarSerial.available()) {
      uint8_t b = RadarSerial.read();
      if (b < 0x10) Serial.print("0");
      Serial.print(b, HEX);
      Serial.print(" ");
    }
    Serial.println();
  }

  delay(100); // loop delay
}

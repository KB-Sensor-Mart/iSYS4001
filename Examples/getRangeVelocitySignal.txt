/*
  iSYS4001 Radar Sensor (get RANGE, VELOCITY, SIGNAL)

  -------------------------------------
  This sketch demonstrates how to interface an ESP32 with the iSYS4001 radar module
  over UART (Serial2). It retrieves radar parameters (range, velocity, signal levels)
  and continuously requests the target list to display detected objects.

  Features:
    - Initializes communication with iSYS4001 over Serial2 (pins RX=16, TX=17 on ESP32).
    - Reads and prints radar configuration parameters:
        * Minimum/Maximum Range
        * Minimum/Maximum Velocity
        * Minimum/Maximum Signal
    - Continuously requests target list data and prints:
        * Signal strength
        * Velocity
        * Range
        * Angle
    - Handles response timeouts and retries once if a request fails.
    - Cleans stale UART data before each request for stability.

  Hardware:
    - ESP32 board
    - iSYS4001 radar module connected via UART2 (pins 16 RX, 17 TX)

  Notes:
    - Adjust DESTINATION_ADDRESS if your radar uses a different address.
    - TIMEOUT_MS can be increased if responses are slow.
    - Output is printed over Serial Monitor at 115200 baud.

*/

#include "iSYS4001.h"

// Use Serial2 (ESP32 default pins: RX=16, TX=17). Adjust if needed.
iSYS4001 radar(Serial2, 115200);

// Storage for decoded targets
iSYSTargetList_t targetList;

// Configuration
const uint8_t DESTINATION_ADDRESS = 0x80;   // Device address
const uint32_t TIMEOUT_MS = 300;            // Response timeout

// ---------------------- Helper Functions ---------------------- //
void flushSerial2() {
  while (Serial2.available()) { Serial2.read(); }
}

void printResult(const char* label, iSYSResult_t result, float value, const char* unit) {
  if (result == ERR_OK) {
    Serial.print(label);
    Serial.print(": ");
    Serial.print(value);
    Serial.print(" ");
    Serial.println(unit);
  } else {
    Serial.print(label);
    Serial.print(" failed - code: 0x");
    Serial.println(result, HEX);
  }
}

void getAndPrintRadarParams() {
  float value;

  printResult("Output Range Min", radar.iSYS_getOutputRangeMin(ISYS_OUTPUT_1, &value, DESTINATION_ADDRESS, TIMEOUT_MS), value, "m");
  printResult("Output Range Max", radar.iSYS_getOutputRangeMax(ISYS_OUTPUT_1, &value, DESTINATION_ADDRESS, TIMEOUT_MS), value, "m");
  printResult("Velocity Min", radar.iSYS_getOutputVelocityMin(ISYS_OUTPUT_1, &value, DESTINATION_ADDRESS, TIMEOUT_MS), value, "Km/h");
  printResult("Velocity Max", radar.iSYS_getOutputVelocityMax(ISYS_OUTPUT_1, &value, DESTINATION_ADDRESS, TIMEOUT_MS), value, "Km/h");
  printResult("Signal Min", radar.iSYS_getOutputSignalMin(ISYS_OUTPUT_1, &value, DESTINATION_ADDRESS, TIMEOUT_MS), value, "dB");
  printResult("Signal Max", radar.iSYS_getOutputSignalMax(ISYS_OUTPUT_1, &value, DESTINATION_ADDRESS, TIMEOUT_MS), value, "dB");
}

void printTargetList() {
  iSYSResult_t res = radar.getTargetList32(&targetList, DESTINATION_ADDRESS, TIMEOUT_MS);

  // Retry once if failed
  if (res != ERR_OK) {
    Serial.print("First attempt failed (code "); Serial.print(res); Serial.println(") - retrying...");
    res = radar.getTargetList32(&targetList, DESTINATION_ADDRESS, TIMEOUT_MS);
  }

  if (res == ERR_OK) {
    if (targetList.error.iSYSTargetListError == TARGET_LIST_OK) {
      Serial.print("Targets: "); Serial.print(targetList.nrOfTargets);
      Serial.print(", Output: "); Serial.println(targetList.outputNumber);

      for (uint16_t i = 0; i < targetList.nrOfTargets && i < MAX_TARGETS; i++) {
        Serial.printf("Target #%u\n", i + 1);
        Serial.printf("  Signal: %.2f dB\n", targetList.targets[i].signal);
        Serial.printf("  Velocity: %.2f m/s\n", targetList.targets[i].velocity);
        Serial.printf("  Range: %.2f m\n", targetList.targets[i].range);
        Serial.printf("  Angle: %.2f deg\n", targetList.targets[i].angle);
      }
    } else {
      Serial.print("Target list error code: ");
      Serial.println(targetList.error.iSYSTargetListError);
    }
  } else {
    Serial.print("Failed to get target list - error code: ");
    Serial.println(res);
  }
}

// ---------------------- Arduino Setup & Loop ---------------------- //
void setup() {
  Serial.begin(115200);
  while (!Serial) { delay(10); }

  Serial2.begin(115200, SERIAL_8N1, 16, 17);

  Serial.println("\n--- Radar Initialization ---");
  Serial.printf("Dest Addr: 0x%X\n", DESTINATION_ADDRESS);
  Serial.printf("Timeout: %lu ms\n", TIMEOUT_MS);

  flushSerial2();
  delay(500);

  Serial.println("\n--- Radar Parameters ---");
  getAndPrintRadarParams();
}

void loop() {
  Serial.println("\n--- Requesting Target List ---");
  flushSerial2();
  printTargetList();
  delay(300);
}

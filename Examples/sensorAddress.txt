#include <Arduino.h>
#include "iSYS4001.h"

// Use UART2 (pins 16 = RX, 17 = TX on ESP32)
HardwareSerial RadarSerial(2);

// Create driver instance (UART is initialized in setup)
iSYS4001 radar(RadarSerial, 115200);

// Example addresses (adjust to your setup)
static const uint8_t CURRENT_ADDR = 0x80; // default hint; actual will be read
static const uint8_t NEW_ADDR     = 0x81; // alternate address

void setup() {
  Serial.begin(115200);
  RadarSerial.begin(115200, SERIAL_8N1, 16, 17); // baud, config, RX, TX
  delay(50);

  Serial.println("iSYS4001 address demo");

  // Step 1: GET current device address (using broadcast DA=0x00)
  uint8_t addr = 0xFF;
  iSYSResult_t r1 = radar.iSYS_getDeviceAddress(&addr, 0x00, 500);
  Serial.print("GET addr result: "); Serial.println((int)r1);
  Serial.print("Current sensor address: 0x"); if (addr < 0x10) Serial.print('0'); Serial.println(addr, HEX);

  // Step 2: Toggle address
  if (r1 == ERR_OK) {
    uint8_t targetAddr = (addr == 0x80) ? 0x81 : 0x80;
    iSYSResult_t rSet = radar.iSYS_setDeviceAddress(targetAddr, addr, 500);
    Serial.print("SET addr result: "); Serial.println((int)rSet);

    // Step 3: Verify by reading again via broadcast
    uint8_t verify = 0xFF;
    iSYSResult_t rV = radar.iSYS_getDeviceAddress(&verify, 0x00, 500);
    Serial.print("VERIFY GET result: "); Serial.println((int)rV);
    Serial.print("New sensor address: 0x"); if (verify < 0x10) Serial.print('0'); Serial.println(verify, HEX);
  }
}

void loop() {
  // Nothing to do repeatedly for this demo
  delay(500);
}
